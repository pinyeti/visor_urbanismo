pipeline {
    agent any

    stages {
        stage('Clonar repositorio') {
            steps {
                // Clonar tu repositorio desde GitHub o cualquier otro sistema de control de versiones
                checkout scm
            }
        }

        stage('Eliminar contenedor y imagen anteriores') {
            steps {
                // Detener y eliminar el contenedor antiguo (si existe)
                sh 'docker stop jenkins_visor_local || true'
                sh 'docker rm jenkins_visor_local || true'

                // Eliminar la imagen Docker anterior (si existe)
                sh 'docker rmi jenkins_visor:latest || true'
            }
        }

        stage('Construir imagen Docker Visor') {
            steps {
                // Ejecutar el comando 'docker build' para construir la nueva imagen con el tag incremental
                sh 'docker build -t jenkins_visor:latest .'
            }
        }

        stage('Ejecutar el nuevo contenedor Docker Visor') {
            steps {
                // Ejecutar el nuevo contenedor Docker
                sh 'docker run -d --name jenkins_visor_local -e DATABASE_HOST=sigdu-urbanismo.net -e DATABASE_PORT=5432 -p
                3001:3000 jenkins_visor:latest'
            }
        }

        stage('Etiquetar imagen Docker para Docker Hub') {
            steps {
                // Utilizar el comando 'docker tag' para etiquetar la imagen local existente
                sh "docker tag jenkins_visor:latest pinyeti/visor_urbanismo:latest"
            }
        }

        stage('Iniciar sesión en Docker Hub') {
            steps {
                // Iniciar sesión en Docker Hub
                sh "docker login -u pinyeti -p q1AIQYhp_9932"
            }
        }

        stage('Subir imagen a Docker Hub') {
            steps {
                // Subir la imagen a Docker Hub
                sh "docker push pinyeti/visor_urbanismo:latest"
            }
        }
    }

    post {
        success {
            echo 'La construcción y ejecución del contenedor Docker se completaron exitosamente.'
        }
        failure {
            echo 'Hubo un problema durante la construcción y/o ejecución del contenedor Docker.'
        }
    }
}
